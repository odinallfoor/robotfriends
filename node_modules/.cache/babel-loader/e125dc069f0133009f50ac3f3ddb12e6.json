{"ast":null,"code":"import { CHANGE_SEARCH_FIELD, REQUEST_ROBOTS_PENDING, REQUEST_ROBOTS_SUCCESS, REQUEST_ROBOTS_FAILED } from \"./constants\";\nconst initialStateSearch = {\n  searchField: ''\n};\nexport const searchRobots = (state = initialStateSearch, action = {}) => {\n  switch (action.type) {\n    case CHANGE_SEARCH_FIELD:\n      return Object.assign({}, state, {\n        searchField: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\nconst initialStateRobots = {\n  isPending: false,\n  robots: [],\n  error: ''\n};\nexport const requestRobots = (state = initialStateRobots, action = {}) => {\n  switch (action.type) {\n    case REQUEST_ROBOTS_PENDING:\n      return Object.assign({}, state, {\n        isPending: true\n      });\n\n    case REQUEST_ROBOTS_SUCCESS:\n      return Object.assign({}, state, {\n        robots: action.payload,\n        isPending: false\n      });\n\n    case REQUEST_ROBOTS_FAILED:\n      return Object.assign({}, state, {\n        error: action.payload,\n        isPending: false\n      });\n\n    default:\n      return state;\n  }\n};\nexport default searchRobots;","map":{"version":3,"sources":["/home/carlos/Escritorio/ReactAppExample/robotfriends/src/reducers.js"],"names":["CHANGE_SEARCH_FIELD","REQUEST_ROBOTS_PENDING","REQUEST_ROBOTS_SUCCESS","REQUEST_ROBOTS_FAILED","initialStateSearch","searchField","searchRobots","state","action","type","Object","assign","payload","initialStateRobots","isPending","robots","error","requestRobots"],"mappings":"AAAA,SACGA,mBADH,EAEGC,sBAFH,EAGGC,sBAHH,EAIGC,qBAJH,QAKO,aALP;AAOA,MAAMC,kBAAkB,GAAG;AACxBC,EAAAA,WAAW,EAAE;AADW,CAA3B;AAIA,OAAO,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGH,kBAAT,EAA6BI,MAAM,GAAE,EAArC,KAA4C;AACrE,UAAQA,MAAM,CAACC,IAAf;AACG,SAAKT,mBAAL;AACG,aAAOU,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAACF,QAAAA,WAAW,EAAEG,MAAM,CAACI;AAArB,OAAzB,CAAP;;AACH;AACG,aAAOL,KAAP;AAJN;AAMF,CAPM;AASP,MAAMM,kBAAkB,GAAG;AACxBC,EAAAA,SAAS,EAAE,KADa;AAExBC,EAAAA,MAAM,EAAE,EAFgB;AAGxBC,EAAAA,KAAK,EAAE;AAHiB,CAA3B;AAMA,OAAO,MAAMC,aAAa,GAAG,CAACV,KAAK,GAAGM,kBAAT,EAA6BL,MAAM,GAAG,EAAtC,KAA6C;AACvE,UAAQA,MAAM,CAACC,IAAf;AACG,SAAKR,sBAAL;AACG,aAAOS,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAACO,QAAAA,SAAS,EAAE;AAAZ,OAAzB,CAAP;;AACH,SAAKZ,sBAAL;AACG,aAAOQ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAACQ,QAAAA,MAAM,EAAEP,MAAM,CAACI,OAAhB;AAAyBE,QAAAA,SAAS,EAAE;AAApC,OAAzB,CAAP;;AACH,SAAKX,qBAAL;AACG,aAAOO,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAACS,QAAAA,KAAK,EAAER,MAAM,CAACI,OAAf;AAAwBE,QAAAA,SAAS,EAAE;AAAnC,OAAzB,CAAP;;AACH;AACG,aAAOP,KAAP;AARN;AAUF,CAXM;AAaP,eAAeD,YAAf","sourcesContent":["import {\n   CHANGE_SEARCH_FIELD,\n   REQUEST_ROBOTS_PENDING,\n   REQUEST_ROBOTS_SUCCESS,\n   REQUEST_ROBOTS_FAILED\n} from \"./constants\";\n\nconst initialStateSearch = {\n   searchField: ''\n}\n\nexport const searchRobots = (state = initialStateSearch, action= {}) => {\n   switch (action.type) {\n      case CHANGE_SEARCH_FIELD:\n         return Object.assign({}, state, {searchField: action.payload})\n      default:\n         return state;\n   }\n}\n\nconst initialStateRobots = {\n   isPending: false,\n   robots: [],\n   error: ''\n}\n\nexport const requestRobots = (state = initialStateRobots, action = {}) => {\n   switch (action.type) {\n      case REQUEST_ROBOTS_PENDING:\n         return Object.assign({}, state, {isPending: true});\n      case REQUEST_ROBOTS_SUCCESS:\n         return Object.assign({}, state, {robots: action.payload, isPending: false});\n      case REQUEST_ROBOTS_FAILED:\n         return Object.assign({}, state, {error: action.payload, isPending: false});\n      default:\n         return state;\n   }\n}\n\nexport default searchRobots;\n"]},"metadata":{},"sourceType":"module"}